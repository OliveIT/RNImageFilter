import { setType } from "../fable-core/Symbol";
import _Symbol from "../fable-core/Symbol";
import { Interface, makeGeneric, Unit, Function as _Function, Any } from "../fable-core/Util";
import List from "../fable-core/List";
export const Props = function (__exports) {
  const SliderProps = __exports.SliderProps = class SliderProps {
    constructor(tag, data) {
      this.tag = tag | 0;
      this.data = data;
    }

    [_Symbol.reflection]() {
      return {
        type: "Fable.Import.ReactNativeSlider.Props.SliderProps",
        interfaces: ["FSharpUnion"],
        cases: [["Value", "number"], ["Disabled", "boolean"], ["MinimumValue", "number"], ["MaximumValue", "number"], ["Step", "number"], ["MinimumTrackTintColor", "string"], ["MaximumTrackTintColor", "string"], ["ThumbTintColor", "string"], ["ThumbTouchSize", Any], ["OnValueChange", _Function(["number", Unit])], ["OnSlidingStart", _Function(["number", Unit])], ["OnSlidingComplete", _Function(["number", Unit])], ["Style", makeGeneric(List, {
          T: Interface("Fable.Helpers.ReactNative.Props.IStyle")
        })], ["TrackStyle", makeGeneric(List, {
          T: Interface("Fable.Helpers.ReactNative.Props.IStyle")
        })], ["ThumbStyle", makeGeneric(List, {
          T: Interface("Fable.Helpers.ReactNative.Props.IStyle")
        })], ["ThumbImage", Interface("Fable.Helpers.ReactNative.Props.IImageSource")], ["DebugTouchArea", "boolean"], ["AnimateTransitions", "boolean"], ["AnimationType", "string"], ["AnimationConfig", Any]]
      };
    }

  };
  setType("Fable.Import.ReactNativeSlider.Props.SliderProps", SliderProps);
  return __exports;
}({});